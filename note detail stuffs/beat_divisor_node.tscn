[gd_scene load_steps=2 format=3 uid="uid://vlp0wqw5b4ov"]

[sub_resource type="GDScript" id="GDScript_e5bgp"]
script/source = "extends Node2D
var beat_divisor: int
var beat: int
signal bd_button_clicked

func _on_button_size_flags_changed():
	$TimelineIndicator/Button.position = Vector2(-$TimelineIndicator/Button.size.x/2, 10)

func button_update():
	$TimelineIndicator/Button.text = \"{\" + str(beat_divisor) + \"}\"

func render():
	if beat > Global.timeline_beats.size() - 1:
		return
	var time = Global.timeline_beats[beat]
	if time > Global.timeline_visible_time_range[\"Start\"] and time < Global.timeline_visible_time_range[\"End\"]:
		$TimelineIndicator.visible = true
		$TimelineIndicator.position = Vector2(Global.time_to_timeline_pos_x(time), 516)
	else:
		$TimelineIndicator.visible = false

func _on_button_pressed():
	bd_button_clicked.emit(self)
"

[node name="BeatDivisorNode" type="Node2D"]
script = SubResource("GDScript_e5bgp")

[node name="TimelineIndicator" type="Node2D" parent="."]

[node name="Line2D" type="Line2D" parent="TimelineIndicator"]
points = PackedVector2Array(0, 0, 0, 132)
width = 2.0
default_color = Color(0.847059, 0, 0.854902, 1)

[node name="Button" type="Button" parent="TimelineIndicator"]
offset_left = -15.0
offset_top = 10.0
offset_right = 15.0
offset_bottom = 42.0
text = "{4}"

[connection signal="pressed" from="TimelineIndicator/Button" to="." method="_on_button_pressed"]
[connection signal="size_flags_changed" from="TimelineIndicator/Button" to="." method="_on_button_size_flags_changed"]
